{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from \"./Reducers/ProductReducers\";\nimport { collectionReducer } from \"./Reducers/CollectionReducers\";\nimport { userLoginReducer } from \"./Reducers/UserReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  collection: collectionReducer,\n  userLogin: userLoginReducer\n});\nconst initialState = {\n  collection: {\n    collectionItems: localStorage.getItem('collectionItems') ? JSON.parse(localStorage.getItem('collectionItems')) : []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","collectionReducer","userLoginReducer","reducer","productList","productDetails","collection","userLogin","initialState","collectionItems","localStorage","getItem","JSON","parse","middleware","store"],"sources":["/Users/mlab/Project/CourseProject/client/src/Redux/store.js"],"sourcesContent":["import  {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport  thunk from \"redux-thunk\";\nimport  { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from \"./Reducers/ProductReducers\";\nimport { collectionReducer } from \"./Reducers/CollectionReducers\";\nimport { userLoginReducer } from \"./Reducers/UserReducer\";\n\nconst reducer = combineReducers({\n    productList:productListReducer, \n    productDetails:productDetailsReducer,\n    collection: collectionReducer,\n    userLogin: userLoginReducer,\n})\n\n\n\nconst initialState = {\ncollection: {\n    collectionItems: localStorage.getItem('collectionItems')\n    ? JSON.parse(localStorage.getItem('collectionItems'))\n    : [],\n}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAO,OAAO;AACpE,OAAQC,KAAK,MAAM,aAAa;AAChC,SAAUC,mBAAmB,QAAQ,0BAA0B;AAC/D,SAASC,kBAAkB,EAAEC,qBAAqB,QAAQ,4BAA4B;AACtF,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,gBAAgB,QAAQ,wBAAwB;AAEzD,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAC5BS,WAAW,EAACL,kBAAkB;EAC9BM,cAAc,EAACL,qBAAqB;EACpCM,UAAU,EAAEL,iBAAiB;EAC7BM,SAAS,EAAEL;AACf,CAAC,CAAC;AAIF,MAAMM,YAAY,GAAG;EACrBF,UAAU,EAAE;IACRG,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD;EACN;AACA,CAAC;AAED,MAAMG,UAAU,GAAG,CAACjB,KAAK,CAAC;AAE1B,MAAMkB,KAAK,GAAGrB,WAAW,CACrBS,OAAO,EACPK,YAAY,EACZV,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAU,CAAC,CAAC,CACtD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}