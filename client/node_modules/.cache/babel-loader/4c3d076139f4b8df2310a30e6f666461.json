{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST } from \"../Constants/UserConstants\";\nimport axios from \"axios\";\n\n//login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:8000/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: console.error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//logout\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  document.location.href = \"/\";\n};\n\n//register\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:8000/api/users/register`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: console.error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","console","response","message","logout","removeItem","document","location","href","register","name","USER_REGISTER_SUCCESS"],"sources":["/Users/mlab/Project/CourseProject/client/src/Redux/Actions/UserActions.js"],"sourcesContent":["import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST } from \"../Constants/UserConstants\";\nimport axios from \"axios\";\n\n//login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n      dispatch({ type: USER_LOGIN_REQUEST });\n\n      const config = {\n        headers:{\n            \"Content-Type\":\"application/json\",\n        }\n      }\n  \n      const { data } = await axios.post(\n        `http://localhost:8000/api/users/login`,{email, password},config\n      );\n  \n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n      localStorage.setItem(\"userInfo\", JSON.stringify(data))\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          console.error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n  //logout\n  export const logout = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\")\n    dispatch({type:USER_LOGOUT})\n    document.location.href=\"/\"\n  }\n\n  //register\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers:{\n          \"Content-Type\":\"application/json\",\n      }\n    }\n\n    const { data } = await axios.post(\n      `http://localhost:8000/api/users/register`,{name, email, password},config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        console.error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n  "],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,WAAW,EAAEC,qBAAqB,QAAQ,4BAA4B;AACxI,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAmB,CAAC,CAAC;IAEtC,MAAMW,MAAM,GAAG;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC9B,uCAAsC,EAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC,EAACG,MAAM,CACjE;IAEDF,QAAQ,CAAC;MAAEC,IAAI,EAAET,kBAAkB;MAAEc,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAER,eAAe;MACrBa,OAAO,EACLM,OAAO,CAACD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,OAAO,GACjDH,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,OAAO,GAC3BH,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOf,QAAQ,IAAK;EACxCO,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;EACnChB,QAAQ,CAAC;IAACC,IAAI,EAACP;EAAW,CAAC,CAAC;EAC5BuB,QAAQ,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;AAC5B,CAAC;;AAED;AACF,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAI,EAAEvB,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACrE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAsB,CAAC,CAAC;IAEzC,MAAMO,MAAM,GAAG;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC9B,0CAAyC,EAAC;MAACgB,IAAI;MAAEvB,KAAK;MAAEC;IAAQ,CAAC,EAACG,MAAM,CAC1E;IAEDF,QAAQ,CAAC;MAAEC,IAAI,EAAEqB,qBAAqB;MAAEhB,OAAO,EAAEF;IAAK,CAAC,CAAC;IAExDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAER,eAAe;MACrBa,OAAO,EACLM,OAAO,CAACD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,OAAO,GACjDH,KAAK,CAACE,QAAQ,CAACT,IAAI,CAACU,OAAO,GAC3BH,KAAK,CAACG;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}