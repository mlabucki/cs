{"ast":null,"code":"var _jsxFileName = \"/Users/mlab/Project/CourseProject/client/src/pages/UserPage.js\",\n  _s = $RefreshSig$();\n// Every user has its personal page where they can mange list of collections (create new, delete, or edit) — each collection in the list is a link to the collection page that contains table of items with sorting/filtering and capabilities to create new item, edit or delete existing item).\nimport { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Card, Button, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails } from \"../Redux/Actions/UserActions\";\nimport Error from \"../components/ui/Error\";\nimport Spiner from \"../components/ui/Spiner\";\nimport UserProfileUpdate from \"./UserProfileUpdate\";\nimport { getListMyOrders } from \"../Redux/Actions/OrderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const [updateForm, setUpdateForm] = useState(false);\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error: detailsError,\n    loading: detailsLoading\n  } = userDetails;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    error: myListError,\n    loading: myListLoading,\n    orders\n  } = orderListMy;\n\n  // const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  // const {loading: updatedLoading } = userUpdateProfile;\n  const updateFormHandler = () => {\n    setUpdateForm(prev => setUpdateForm(!prev));\n  };\n  useEffect(() => {\n    dispatch(getUserDetails(\"profile\"));\n    dispatch(getListMyOrders());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: updateFormHandler,\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), detailsError && /*#__PURE__*/_jsxDEV(Error, {\n            variant: \"alert-danger\",\n            children: detailsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), detailsLoading && /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this), updateForm && /*#__PURE__*/_jsxDEV(UserProfileUpdate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"The \", userInfo.name, \"'s Collection List\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: myListLoading ? /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this) : myListError ? /*#__PURE__*/_jsxDEV(Error, {\n                children: myListError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"User Id\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), orders.map(item => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item._id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.user\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this)\n                }, item._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [\"Collections : \", orders ? orders.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPage, \"MXx09rTYc98WR4rN6ur7kjWqhi4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["useEffect","useState","Col","Container","Row","Card","Button","Table","Link","useDispatch","useSelector","getUserDetails","Error","Spiner","UserProfileUpdate","getListMyOrders","UserPage","updateForm","setUpdateForm","dispatch","userLogin","state","userInfo","userDetails","error","detailsError","loading","detailsLoading","orderListMy","myListError","myListLoading","orders","updateFormHandler","prev","name","map","item","_id","user","length"],"sources":["/Users/mlab/Project/CourseProject/client/src/pages/UserPage.js"],"sourcesContent":["// Every user has its personal page where they can mange list of collections (create new, delete, or edit) — each collection in the list is a link to the collection page that contains table of items with sorting/filtering and capabilities to create new item, edit or delete existing item).\nimport { useEffect , useState} from \"react\";\nimport { Col, Container, Row, Card, Button, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails } from \"../Redux/Actions/UserActions\";\nimport Error from \"../components/ui/Error\";\nimport Spiner from \"../components/ui/Spiner\";\nimport UserProfileUpdate from \"./UserProfileUpdate\";\nimport { getListMyOrders } from \"../Redux/Actions/OrderActions\";\n\nconst UserPage = () => {\n  const [updateForm, setUpdateForm] = useState(false);\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { error: detailsError, loading: detailsLoading } = userDetails;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { error: myListError, loading: myListLoading, orders } = orderListMy;\n\n  // const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  // const {loading: updatedLoading } = userUpdateProfile;\n  const updateFormHandler = () => {\n    setUpdateForm(prev => setUpdateForm(!prev))\n  }\n\n  useEffect(() => {\n    dispatch(getUserDetails(\"profile\"));\n    dispatch(getListMyOrders());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          \n\n          <Card>\n            <Card.Title><Button onClick={updateFormHandler}>Update Profile</Button></Card.Title>\n            {detailsError && (\n              <Error variant={\"alert-danger\"}>{detailsError}</Error>\n            )}\n            {detailsLoading && <Spiner />}\n            {updateForm && (\n            <UserProfileUpdate />\n            )}\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <Card.Title>The {userInfo.name}'s Collection List</Card.Title>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card>\n            \n            <Card.Body>\n              <Card.Text>\n                {myListLoading ? (\n                  <Spiner />\n                ) : myListError ? (\n                  <Error>{myListError}</Error>\n                ) : (\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Id</th>\n                        <th>User Id</th>\n                      </tr>\n                    </thead>\n                    {orders.map((item) => (\n                      <tbody key={item._id}>\n                        <tr>\n                          <td>{item._id}</td>\n                          <td>{item.user}</td>\n                        </tr>\n                      </tbody>\n                    ))}\n                  </Table>\n                )}\n              </Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              Collections : {orders ? orders.length : 0}\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default UserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}