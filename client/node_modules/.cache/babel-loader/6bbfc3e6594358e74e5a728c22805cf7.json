{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from \"../Constants/ProductConstant\";\nimport { logout } from \"./UserActions\";\n\n//all products\nexport const listProduct = keyword => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/api/products${keyword ? `?keyword=${keyword}` : \"\"}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//single product\nexport const listProductDetail = _id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/api/products/${_id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//review create\nexport const createproductReview = (_id, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`http://localhost:8000/api/products/${_id}/review`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, provide token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","logout","listProduct","keyword","dispatch","type","data","get","payload","error","response","message","listProductDetail","_id","createproductReview","review","getState","userLogin","userInfo","config","headers","Authorization","token","post"],"sources":["/Users/michallabucki/Documents/cs/client/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n} from \"../Constants/ProductConstant\";\nimport { logout } from \"./UserActions\";\n\n//all products\nexport const listProduct = (keyword) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\n      `http://localhost:8000/api/products${\n        keyword ? `?keyword=${keyword}` : \"\"\n      }`\n    );\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//single product\nexport const listProductDetail = (_id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(\n      `http://localhost:8000/api/products/${_id}`\n    );\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//review create\nexport const createproductReview =\n  (_id, review) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      await axios.post(\n        `http://localhost:8000/api/products/${_id}/review`,\n        review,\n        config\n      );\n\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, provide token\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n      });\n    }\n  };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}