{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"../Constants/UserConstants\";\nimport axios from \"axios\";\n\n//login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:8000/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//logout\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  document.location.href = \"/\";\n};\n\n//register\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:8000/api/users/register`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//update\nexport const getUserDetails = _id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/api/users/profile/${_id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, provide token\") {\n      dispatch(logout);\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","_id","getState","userLogin","userInfo","Authorization","token","get"],"sources":["/Users/mlab/Project/CourseProject/client/src/Redux/Actions/UserActions.js"],"sourcesContent":["import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_SUCCESS,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n} from \"../Constants/UserConstants\";\nimport axios from \"axios\";\n\n//login\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `http://localhost:8000/api/users/login`,\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n       error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//logout\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  document.location.href = \"/\";\n};\n\n//register\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `http://localhost:8000/api/users/register`,\n      { name, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n       error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//update\nexport const getUserDetails = (_id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:8000/api/users/profile/${_id}`,\n      config\n    );\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =  error.response && error.response.data.message\n      ? error.response.data.message\n      : error.message;\n      if(message === \"Not authorized, provide token\"){\n        dispatch(logout)\n      }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}