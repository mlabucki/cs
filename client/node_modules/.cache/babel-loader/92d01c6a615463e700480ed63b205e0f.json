{"ast":null,"code":"var _jsxFileName = \"/Users/mlab/Project/CourseProject/client/src/pages/Orders.js\";\nimport { Col, Container, Row, Card, Table, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Spiner from \"../components/ui/Spiner\";\nimport Error from \"../components/ui/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Orders = _ref => {\n  let {\n    loading,\n    error,\n    orders\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spiner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"No Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/products\",\n                children: \"Please create your collection by using our products!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false)\n  }, void 0, false);\n};\n_c = Orders;\nexport default Orders;\n\n//     <Container>\n//   <Row>\n//     <Col>\n//       <Card>\n//         <Card.Body>\n//           <Card.Title> Products ({collectionItems.length})</Card.Title>\n//           {collectionItems.length === 0 ? (\n//             <>\n//               <h1>Your collection is empty</h1>\n//               <Link to={`/products`}>\n//               <Button>Create new Collection</Button>\n//               </Link>\n//             </>\n//           ) : (\n//             <>\n//               <Table striped bordered hover>\n//                 <thead>\n//                   <tr>\n//                     <th>#</th>\n//                     <th>Product Name</th>\n//                     <th>Qty</th>\n//                     <th>Price</th>\n//                     <th\n\n//                     // dataFormat={imageFormatter}\n//                     >\n//                       Collection image\n//                     </th>\n//                     <th>Edit</th>\n//                     <th>Remove</th>\n//                   </tr>\n//                 </thead>\n//                 {collectionItems.map((item) => (\n//                   <tbody key={item.productId}>\n//                     <tr>\n//                       <td>1</td>\n//                       <td>\n//                         <Link to={`/products/${productId}`}>Product 1</Link>\n//                       </td>\n//                       <td>\n//                         <select\n//                           value={item.qty}\n//                           onChange={(e) =>\n//                             dispatch(\n//                               addToCollection(\n//                                 item.product,\n//                                 Number ( e.target.value)\n//                               )\n//                             )\n//                           }\n//                         >\n//                           {[...Array(item.countInStock).keys()].map((p) => (\n//                             <option key={p + 1} value={p + 1}>\n//                               {p + 1}\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </td>\n//                       <td>{item.productId}</td>\n//                       <td>{item.price}$</td>\n//                       <td>{item.image}</td>\n//                       <td>Edit</td>\n//                       <td>\n//                         <Button\n//                           onClick={() => removeFromCollectionHandle(item.product)}\n//                         >\n//                           Remove\n//                         </Button>\n//                       </td>\n//                     </tr>\n//                   </tbody>\n//                 ))}\n//               </Table>\n//             </>\n//           )}\n\n//           <Card.Title>\n\n//            <Button onClick={checkOutHandler}>Create Collection</Button>\n//           </Card.Title>\n//         </Card.Body>\n//       </Card>\n//     </Col>\n//   </Row>\n// </Container>\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["Col","Container","Row","Card","Table","Button","Link","Spiner","Error","Orders","loading","error","orders","length"],"sources":["/Users/mlab/Project/CourseProject/client/src/pages/Orders.js"],"sourcesContent":["import { Col, Container, Row, Card, Table, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Spiner from \"../components/ui/Spiner\";\nimport Error from \"../components/ui/Error\";\n\nconst Orders = ({ loading, error, orders }) => {\n  return (\n    <>\n      {loading ? (\n        <Spiner />\n      ) : error ? (\n        <Error>{error}</Error>\n      ) : (\n        <>\n          {orders.length === 0 ? (\n            <Container>\n              <Row>\n                <Card>\n                  <Card.Body>\n                    <Card.Text>\n                        No Orders\n                    </Card.Text>\n                    <Link to=\"/products\">\n                        Please create your collection by using our products!\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Row>\n            </Container>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Orders;\n\n//     <Container>\n//   <Row>\n//     <Col>\n//       <Card>\n//         <Card.Body>\n//           <Card.Title> Products ({collectionItems.length})</Card.Title>\n//           {collectionItems.length === 0 ? (\n//             <>\n//               <h1>Your collection is empty</h1>\n//               <Link to={`/products`}>\n//               <Button>Create new Collection</Button>\n//               </Link>\n//             </>\n//           ) : (\n//             <>\n//               <Table striped bordered hover>\n//                 <thead>\n//                   <tr>\n//                     <th>#</th>\n//                     <th>Product Name</th>\n//                     <th>Qty</th>\n//                     <th>Price</th>\n//                     <th\n\n//                     // dataFormat={imageFormatter}\n//                     >\n//                       Collection image\n//                     </th>\n//                     <th>Edit</th>\n//                     <th>Remove</th>\n//                   </tr>\n//                 </thead>\n//                 {collectionItems.map((item) => (\n//                   <tbody key={item.productId}>\n//                     <tr>\n//                       <td>1</td>\n//                       <td>\n//                         <Link to={`/products/${productId}`}>Product 1</Link>\n//                       </td>\n//                       <td>\n//                         <select\n//                           value={item.qty}\n//                           onChange={(e) =>\n//                             dispatch(\n//                               addToCollection(\n//                                 item.product,\n//                                 Number ( e.target.value)\n//                               )\n//                             )\n//                           }\n//                         >\n//                           {[...Array(item.countInStock).keys()].map((p) => (\n//                             <option key={p + 1} value={p + 1}>\n//                               {p + 1}\n//                             </option>\n//                           ))}\n//                         </select>\n//                       </td>\n//                       <td>{item.productId}</td>\n//                       <td>{item.price}$</td>\n//                       <td>{item.image}</td>\n//                       <td>Edit</td>\n//                       <td>\n//                         <Button\n//                           onClick={() => removeFromCollectionHandle(item.product)}\n//                         >\n//                           Remove\n//                         </Button>\n//                       </td>\n//                     </tr>\n//                   </tbody>\n//                 ))}\n//               </Table>\n//             </>\n//           )}\n\n//           <Card.Title>\n\n//            <Button onClick={checkOutHandler}>Create Collection</Button>\n//           </Card.Title>\n//         </Card.Body>\n//       </Card>\n//     </Col>\n//   </Row>\n// </Container>\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAC1E,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB;AAAC;AAAA;AAE3C,MAAMC,MAAM,GAAG,QAAgC;EAAA,IAA/B;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAO,CAAC;EACxC,oBACE;IAAA,UACGF,OAAO,gBACN,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,GACRC,KAAK,gBACP,QAAC,KAAK;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,gBAEtB;MAAA,UACGC,MAAM,CAACC,MAAM,KAAK,CAAC,gBAClB,QAAC,SAAS;QAAA,uBACR,QAAC,GAAG;UAAA,uBACF,QAAC,IAAI;YAAA,uBACH,QAAC,IAAI,CAAC,IAAI;cAAA,wBACR,QAAC,IAAI,CAAC,IAAI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAEE,eACZ,QAAC,IAAI;gBAAC,EAAE,EAAC,WAAW;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAEb;YAAA;cAAA;cAAA;cAAA;YAAA;UACG;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA;MACH;QAAA;QAAA;QAAA;MAAA,QACI,GACV;IAAI;EAEX,iBACA;AAEP,CAAC;AAAC,KA7BIJ,MAAM;AA+BZ,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}