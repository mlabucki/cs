{"ast":null,"code":"import axios from \"axios\";\nimport { COLLECTION_CLEAR_ITEMS } from \"../Constants/CollectionConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS } from \"../Constants/OrderConstants\";\nimport { logout } from \"./UserActions\";\n\n//create order\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://localhost:8000/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: COLLECTION_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem(\"collectionItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, provide token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\n\n//details order\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, provide token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n\n// order list\nexport const getListMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, provide token\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["axios","COLLECTION_CLEAR_ITEMS","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","logout","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","getListMyOrders"],"sources":["/Users/mlab/Project/courseProject/client/src/Redux/Actions/OrderActions.js"],"sourcesContent":["import axios from \"axios\";\nimport { COLLECTION_CLEAR_ITEMS } from \"../Constants/CollectionConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS } from \"../Constants/OrderConstants\";\nimport {logout} from \"./UserActions\";\n\n//create order\nexport const createOrder = (order) => async(dispatch,getState) => {\n    try {\n      dispatch({ type: ORDER_CREATE_REQUEST });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          \"Content-Type\":\"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.post(\n        `http://localhost:8000/api/orders`,\n        order,\n        config\n      );\n  \n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n      dispatch({ type: COLLECTION_CLEAR_ITEMS, payload: data });\n      \n      localStorage.removeItem(\"collectionItems\")\n      \n    } catch (error) {\n      const message =  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        if(message === \"Not authorized, provide token\"){\n          dispatch(logout())\n        }\n  \n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: message\n      });\n    }\n  }\n\n  //details order\nexport const getOrderDetails = (id) => async(dispatch,getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:8000/api/orders/${id}`,\n      config\n    );\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n\n  } catch (error) {\n    const message =  error.response && error.response.data.message\n      ? error.response.data.message\n      : error.message;\n      if(message === \"Not authorized, provide token\"){\n        dispatch(logout())\n      }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}\n\n  // order list\n  export const getListMyOrders = () => async(dispatch,getState) => {\n    try {\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.get(\n        `http://localhost:8000/api/orders`,\n        config\n      );\n  \n      dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\n  \n    } catch (error) {\n      const message =  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n        if(message === \"Not authorized, provide token\"){\n          dispatch(logout())\n        }\n  \n      dispatch({\n        type: ORDER_LIST_MY_FAIL,\n        payload: message\n      });\n    }\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}